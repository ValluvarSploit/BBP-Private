name: Subdomain Takeover
on:
  workflow_dispatch:
env:
   HOST: ${{ secrets.NGROK_URL }}
   SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
   SLACK_CHANNEL_NAME: ${{ secrets.SLACK_CHANNEL_NAME }}

jobs:       
  Subzy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         wget $HOST/http-resolved-url.txt -O targets.txt
         sudo chmod +x binaries/subzy
      - name: Subzy
        run: |
         ./binaries/subzy --targets=targets.txt -concurrency 50 | tee subzy-logs.txt
         cat subzy-logs.txt | grep -v "NOT VULNERABLE" > subzy-vulnerable.txt   
      - name: Send Output to Slack
        run: |
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=Subzy-Logs -F filename=subzy-logs.txt -F file=@subzy-logs.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=Subzy-Vulnerable -F filename=subzy-vulnerable.txt -F file=@subzy-vulnerable.txt

  Subjack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         wget $HOST/http-resolved-url.txt -O targets.txt
         sudo chmod +x binaries/subjack
      - name: Subjack
        run: |
         ./binaries/subjack -w targets.txt -t 100 -timeout 30 -o subjack-logs.txt -v -c binaries/subjack_fingerprints.json
         cat subjack-logs.txt | grep -v "Not Vulnerable" | tee subjack-vulnerable.txt
      - name: Send Output to Slack
        run: |
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=Subjack-Logs -F filename=subjack-logs.out -F file=@subjack-logs.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=Subjack-Vulnerable -F filename=subjack-vulnerable.out -F file=@subjack-vulnerable.txt

  Nuclei:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         wget $HOST/http-resolved-url.txt -O targets.txt
         git clone https://github.com/projectdiscovery/nuclei-templates.git
         sudo chmod +x binaries/nuclei
      - name: Nuclei
        run: ./binaries/nuclei -l targets.txt -c 100 -stats -t nuclei-templates/takeovers/ -o nuclie-vulnerable.txt
      - name: Send Output Files Slack Channel
        run: if [[ -f nuclie-vulnerable.txt ]]; then curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=Nuclei-Vulnerable -F filename=nuclei-vulnerable.out -F file=@nuclie-vulnerable.txt ; fi


