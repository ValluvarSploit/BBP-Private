#Important Note:
# Before running this action, make sure you updated following secrets variables in settings.
#  1. DOMAIN 
#       example.com
#  2. wget https://[ngrok-server]/http-resolved-url.txt -O targets.txt
name: Subdomain Takeover
on:
  workflow_dispatch:
env:
   TARGET_DOMAIN: ${{ secrets.DOMAIN }}
   TARGETS: https://ea87d8f33f6f.ngrok.io/http-resolved-url.txt
   SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
   SLACK_CHANNEL_NAME: ${{ secrets.SLACK_PRIVATE_BB_CHANNEL_NAME }}

jobs:       
  Subzy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         wget $TARGETS -O targets.txt && cat targets.txt
         go get -u -v github.com/lukasikic/subzy && cp /home/runner/go/bin/subzy .         
      - name: Subzy
        run: |
         ./subzy --targets=targets.txt -concurrency 50 | tee subzy-logs.txt
         cat subzy-logs.txt | grep -v "NOT VULNERABLE" > subzy-vulnerable.txt   
      - name: Send Output to Slack
        run: |
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-Subzy-Logs -F filename="$TARGET_DOMAIN"-subzy-logs.txt -F file=@"$TARGET_DOMAIN"-subzy-logs.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-Subzy-Vulnerable -F filename="$TARGET_DOMAIN"-subzy-vulnerable.txt -F file=@"$TARGET_DOMAIN"-subzy-vulnerable.txt

  Subjack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         wget $TARGETS -O targets.txt && cat targets.txt
         go get -v github.com/haccer/subjack && cp /home/runner/go/bin/subjack .          
      - name: Subjack
        run: |
         ./subjack -w targets.txt -t 100 -timeout 30 -o subjack-logs.txt -v -c /home/runner/go/src/github.com/haccer/subjack/fingerprints.json
         cat subjack-logs.txt | grep -v "Not Vulnerable" | tee subjack-vulnerable.txt
      - name: Send Output to Slack
        run: |
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-Subjack-Logs -F filename="$TARGET_DOMAIN"-subjack-logs.txt -F file=@"$TARGET_DOMAIN"-subjack-logs.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-Subjack-Vulnerable -F filename="$TARGET_DOMAIN"-subjack-vulnerable.txt -F file=@"$TARGET_DOMAIN"-subjack-vulnerable.txt

  Nuclei:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         wget $TARGETS -O targets.txt && cat targets.txt
         git clone https://github.com/projectdiscovery/nuclei-templates.git
         wget https://github.com/projectdiscovery/nuclei/releases/download/v2.2.0/nuclei_2.2.0_linux_amd64.tar.gz && tar -xzvf nuclei_2.2.0_linux_amd64.tar.gz          
      - name: Nuclei
        run: ./nuclei -l targets.txt -c 100 -stats -t nuclei-templates/takeovers/ -o nuclie-Vulnerable.txt
      - name: Send Output Files Slack Channel
        run: if [[ -f nuclie-Vulnerable.txt ]]; then curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-Nuclei-Vulnerable -F filename="$TARGET_DOMAIN"-nuclei-vulnerable.txt -F file=@"$TARGET_DOMAIN"-nuclei-vulnerable.txt ; fi


