name: Dev-Test
on:
  workflow_dispatch:
env:
      TARGET: ${{ secrets.PUBLIC_DOMAIN }}
      EXCLUDE_HOST: ${{ secrets.PUBLIC_EXCLUDE_HOST }}
      HOST: ${{ secrets.NGROK_URL }}
      AWS_CREDS: ${{ secrets.AWS_CREDENTIALS }}
      XSS_HUNTER_URL_TOKEN: ${{ secrets.XSS_HUNTER_BLIND_URL_TOKEN }}
      SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
      SLACK_CHANNEL_NAME: ${{ secrets.PUBLIC_SLACK_CHANNEL_NAME }}

jobs:
  subdomain-enumeration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2             
      - name: Install Dependencies
        run: |
         echo "$EXCLUDE_HOST" > subdomains-exclude.txt
         wget $HOST/fdns-local.txt
         sudo apt-get install python3-setuptools
         sudo snap install amass
         wget --quiet https://raw.githubusercontent.com/ValluvarSploit/Resolver/main/resolvers.txt
         cd binaries; chmod +x assetfinder findomain subfinder httpx; cd ..
         git clone https://github.com/m8r0wn/subscraper
         cd subscraper; sudo python3 setup.py install; cd ..
      - name: SubScraper
        run: |
         python3 subscraper/subscraper.py "$TARGET" -o subdomains-all.txt;
         cat fdns-local.txt >> subdomains-all.txt
      - name: Amass
        run: amass enum -passive -d "$TARGET" >> subdomains-all.txt;
      - name: Assetfinder
        run: ./binaries/assetfinder --subs-only "$TARGET" -silent >> subdomains-all.txt;          
      - name: Findomain
        run: ./binaries/findomain -t "$TARGET" -q >> subdomains-all.txt; 
      - name: Subfinder
        run: |
         ./binaries/subfinder -d "$TARGET" -all --silent >> subdomains-all.txt
         echo Total Discovered Subdomains: $(cat subdomains-all.txt | wc -l)
      - name: MassDNS
        run: |
         sed "s/$/.$TARGET/" wordlists/subdomain-wordlists.txt > wordlist-hugh.txt
         ./binaries/massdns -r resolvers.txt -t A -o S -w massdns-output.txt wordlist-hugh.txt
         cat massdns-output.txt | awk '{print $1}' | sed 's/.$//' | sort -u > live-hosts.txt
         cat massdns-output.txt | awk '{print $3}' | sort -u  > live-ips.txt
      - name: Unique subdomains
        run: |
         cat live-hosts.txt >> subdomains-all.txt
         cat subdomains-all.txt | sed 's/\*\.//g' | sort -u > subdomains-uniq.txt
         echo Total Uniq Subdomains: $(cat subdomains-uniq.txt | wc -l)
         grep -vFf subdomains-exclude.txt subdomains-uniq.txt > subdomains.txt
         echo Total Subdomains to do Recon: $(cat subdomains.txt | wc -l)       
      - name: HTTP/HTTPS Resolver
        run: |
         ./binaries/httpx -l subdomains.txt -follow-redirects -status-code -title -cname -vhost -threads 300 -silent -o httpx.log
         cat httpx.log | grep "[200]" | cut -d " " -f 1 | sort -u > subdomains-resolved.txt 
         echo Total Resolved Subdomains: $(cat subdomains-resolved.txt | wc -l)
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
         name: subdomain-enumeration-artifacts
         path: |
           subdomains-resolved.txt 
           live-hosts.txt
      - name: Send Output to Slack
        run: |
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET"-Subdomains -F filename=subdomains-resolved.out -F file=@subdomains-resolved.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=MassDNS-Live-IPs -F filename=live-ips.out -F file=@live-ips.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=MassDNS-Live-Hosts -F filename=live-hosts.out -F file=@live-hosts.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET"-httpx-logs -F filename=httpx.log -F file=@httpx.log
