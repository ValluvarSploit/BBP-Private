name: Subdomain Recon Normal
on:
  workflow_dispatch:
env:
      TARGET: ${{ secrets.DOMAIN }}
      HOST: ${{ secrets.NGROK_URL }}
      S_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
      WEBHOOK: ${{ secrets.WHOOK_JOB_ALERTS }}
      S_URL: https://slack.com/api/files.upload
      CUSTOM_GIT_CREDS : ${{ secrets.CUSTOM_GIT_CREDENTIALS }}
      CUSTOM_GIT_CONFIG : ${{ secrets.CUSTOM_GIT_CONFIG }} 

jobs:
  Subdomain-enum:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Subdomains
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         wget -q $HOST/subdomains-reliable.txt -O subdomains-manual.txt;
         GREEN='\033[0;32m'; cat subdomains-manual.txt | head | xargs -n1 echo -e ${GREEN} snipped;
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/subs.sh "$TARGET";
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
         name: subdomains-artifacts
         path: all-subdomains.txt
      - name: Slack
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title="$TARGET"-Subdomain-Enum -F file=@all-subdomains.txt;
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK" ;

  HTTPX:
    needs: Subdomain-enum
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: subdomains-artifacts    
      - name: Install Dependencies
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         GREEN='\033[0;32m'; cat all-subdomains.txt | head | xargs -n1 echo -e ${GREEN} snipped;
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/httpx.sh all-subdomains.txt;
         cp httpx.out subdomains-reliable-resolved.txt;
         cat subdomains-reliable-resolved.txt | cut -d "/" -f 3 > subdomains-reliable-resolved-host.txt;
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
         name: httpx-artifacts
         path: |
           subdomains-reliable-resolved.txt
           subdomains-reliable-resolved-host.txt
      - name: Slack
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title="$TARGET"-Subdomains-Reliable-Resolved -F file=@subdomains-reliable-resolved.txt;
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK" ;

  DNSx:
    runs-on: ubuntu-latest
    if: always()
    needs: HTTPX    
    steps:
      - uses: actions/checkout@v2 
      - uses: actions/download-artifact@v2
        with:
         name: httpx-artifacts       
      - name: DNSx
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         GREEN='\033[0;32m'; cat subdomains-reliable-resolved-host.txt | head | xargs -n1 echo -e ${GREEN} snipped;
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/dnsx.sh subdomains-reliable-resolved-host.txt;
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
         name: dnsx-artifacts
         path: |
          dnsx-host-live.txt
          dnsx-ip-live.txt
      - name: Slack Notification
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title=DNSx-Hosts-Live -F file=@dnsx-host-live.txt;
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title=DNSx-IPs-Live -F file=@dnsx-ip-live.txt;
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK" ;
