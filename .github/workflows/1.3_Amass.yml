name: Amass
on:
  workflow_dispatch:
env:
     TARGET: ${{ secrets.DOMAIN_AMASS }}
     SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
     WEBHOOK: ${{ secrets.WHOOK_JOB_ALERTS }}
jobs:
  amass-brute:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: | 
         wget --quiet https://raw.githubusercontent.com/ValluvarSploit/Resolver/main/resolvers.txt
         wget --quiet https://github.com/OWASP/Amass/releases/download/v3.11.13/amass_linux_amd64.zip ; unzip amass_linux_amd64.zip
      - name: Amass
        run: |
         ./amass_linux_amd64/amass enum -brute -d "$TARGET" -o amass-brute.txt -v -max-dns-queries 10000 -rf resolvers.txt
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
         name: Amass-artifacts
         path: amass-brute.txt
      - name: Send Output to Slack
        if: always()
        run: |
         SLACK_CHANNEL_NAME=$(echo $TARGET | sed 's/\./_/g')
         xz amass-brute.txt
         curl -X POST -H 'Content-type: application/json' --data '{"text":"AMASS Brute COMPLETED FOR - '$TARGET'"}' "$WEBHOOK"
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET"-Amass-Brute -F file=@amass-brute.txt.xz        

  HTTPX:
    if: always()
    runs-on: ubuntu-latest
    needs: amass-brute
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: Amass-artifacts
      - name: Install Dependencies
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Httprobe INITIATED FOR - '$TARGET'"}' "$WEBHOOK"
         wget -q -i requirements/httprober.txt; tar -xzvf httpx_1.0.5_linux_amd64.tar.gz;
      - name: Httprobe
        run: |
         ./httpx -l amass-brute.txt -threads 300 -silent -timeout 15 -o amass-httpx.txt;
      - name: Output & Slack Notification
        if: always()
        run: |
         SLACK_CHANNEL_NAME=$(echo $TARGET | sed 's/\./_/g')
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Amass - HTTPX COMPLETED FOR - '$TARGET'"}' "$WEBHOOK"
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET"-Amass-HTTPX -F file=@amass-httpx.txt
