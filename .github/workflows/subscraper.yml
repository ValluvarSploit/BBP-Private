name: SubScrper
on:
  workflow_dispatch:
env:
      TARGET: ${{ secrets.DOMAIN }}
      HOST: ${{ secrets.NGROK_URL }}
      S_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
      WEBHOOK: ${{ secrets.WHOOK_JOB_ALERTS }}
      S_URL: https://slack.com/api/files.upload
      CUSTOM_GIT_CREDS : ${{ secrets.CUSTOM_GIT_CREDENTIALS }}
      CUSTOM_GIT_CONFIG : ${{ secrets.CUSTOM_GIT_CONFIG }}        
jobs:
  Eyewitness:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Eyewitness Screenshot
        run: |
         git clone https://github.com/ValluvarSploit/subscraper.git;
         cd subscraper;
         docker build -t valluvarsploit/subscraper .
         docker run --rm valluvarsploit/subscraper -h
         docker run --rm -v `pwd`:/tmp valluvarsploit/subscraper allegro.pl -o /tmp/subs.txt
         ls -la
#         docker pull valluvarsploit/subscraper:latest
#         docker run --rm -v `pwd`:/subscraper valluvarsploit/subscraper allegro.pl -o /subscraper/subs.subscrap
#         docker run --rm valluvarsploit/subscraper -h
#         git clone https://github.com/ValluvarSploit/subscraper.git; pip3 install -r subscraper/requirements.txt
#         python3 subscraper/subscraper.py -h
        #; cd subscraper ; sudo python3 setup.py install; cd ..
      - name: Output & Slack Notification
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title=Eyewitness-Screenshot -F file=@eyewitness_output.zip.xz;
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";
