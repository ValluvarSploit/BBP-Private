name: MassDNS / Httprobe
on:
  workflow_dispatch:
env:
       TARGET: ${{ secrets.DOMAIN_MASSDNS }}
       SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
       WEBHOOK: ${{ secrets.WHOOK_JOB_ALERTS }}

jobs:
  massdns-resolver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2             
      - name: Install Dependencies
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"MassDNS Resolving has STARTED for - '$TARGET'"}' "$WEBHOOK"
         wget --quiet https://raw.githubusercontent.com/ValluvarSploit/Resolver/main/resolvers.txt
         wget --quiet https://wordlists-cdn.assetnote.io/data/manual/best-dns-wordlist.txt
         git clone https://github.com/blechschmidt/massdns.git && cd massdns/ && make
      - name: MassDNS
        run: |
         sed "s/$/.$TARGET/" best-dns-wordlist.txt > wordlist-hugh.txt
         ./massdns/bin/massdns -r resolvers.txt -t A -o S -w massdns-output.txt wordlist-hugh.txt
         cat massdns-output.txt | awk '{print $1}' | sed 's/.$//' | tr A-Z a-z | sort -u > live-hosts-output.txt
         curl -X POST -H 'Content-type: application/json' --data '{"text":"MassDNS Resolver has COMPLETED for - '$TARGET'"}' "$WEBHOOK"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
         name: MassDNS-artifacts
         path: live-hosts-output.txt
      - name: Output & Slack Notification
        if: always()
        run: |
         SLACK_CHANNEL_NAME=$(echo $TARGET | sed 's/\./_/g')
         curl -X POST -H 'Content-type: application/json' --data '{"text":"MassDNS COMPLETED FOR - '$TARGET'"}' "$WEBHOOK"
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET"-MassDNS -F file=@massdns-output.txt
         
  Httprobe:
    runs-on: ubuntu-latest
    needs: massdns-resolver
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: MassDNS-artifacts
      - name: Install Dependencies
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Httprobe INITIATED FOR - '$TARGET'"}' "$WEBHOOK"
         chmod +x binaries/httprobe
      - name: Httprobe
        run: |
         cat live-hosts-output.txt | ./binaries/httprobe | tee massdns-httprobe.txt ;
      - name: Output & Slack Notification
        if: always()
        run: |
         SLACK_CHANNEL_NAME=$(echo $TARGET | sed 's/\./_/g')
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Httprobe COMPLETED FOR - '$TARGET'"}' "$WEBHOOK"
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET"-MassDNS-Httprobe -F file=@massdns-httprobe.txt
