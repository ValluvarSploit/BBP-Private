name: Gobuster Files Brute
on:
  workflow_dispatch:
env:
       HOST: ${{ secrets.NGROK_URL }}
       SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
       SLACK_CHANNEL_NAME: ${{ secrets.SLACK_CN_SOLO }} 
       WEBHOOK: ${{ secrets.SLACK_WEBHOOK_SOLO }}
     
jobs:
  Gobuster-Files-Brute:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Gobuster Files Brute INITIATED FOR - '$TARGET'"}' "$WEBHOOK"
         wget $HOST/subdomains-resolved.txt
         wget --quiet https://wordlists-cdn.assetnote.io/data/kiterunner/swagger-wordlist.txt
         wget https://github.com/OJ/gobuster/releases/download/v3.1.0/gobuster-linux-amd64.7z
         7z e gobuster-linux-amd64.7z ; chmod +x gobuster
         mkdir gobuster-files-brute
      - name: Gobuster
        run: |
         for url in $(cat subdomains-resolved.txt) ; do ./gobuster dir -u $url -w swagger-wordlist.txt -o gobuster-files-brute/$(date '+%F%T.%N')-output.txt -a Mozilla/5.0 -e --wildcard ; done ;
         zip gobuster-files-brute.zip gobuster-files-brute
       #for url in $(cat subdomains-resolved.txt) ; do ./gobuster dir -u $url -w wordlists/sensitive-wordlist.txt -l -o gobuster-files-brute/$(date '+%F%T.%N')-output.txt -a Mozilla/5.0 -e --wildcard ; done ;
      - name: Output & Slack Notification
        if: always()
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Gobuster File Brute COMPLETED FOR - '$TARGET'"}' "$WEBHOOK"
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET"-GoBuster-File-Brute -F file=@gobuster-files-brute
          
