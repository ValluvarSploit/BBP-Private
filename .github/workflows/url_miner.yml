#Stage 4
#Important Note:
# Before running this action, make sure you updated following secrets variables in settings.
#  1. TARGET_DOMAIN    , formtat below
#       example.com
#  2. TARGET_IGNORE_HOSTS_LIST     (If this secrets is not updated, result may go wrong.)
#       docs.example.com
#       info.example.com 

name: URL Collector

on:
  workflow_dispatch:

jobs:
  url-collector:
    runs-on: ubuntu-latest
    env:
                 TARGET_DOMAIN: ${{ secrets.TARGET_DOMAIN }}
                 TARGET_IGNORE_HOSTS_LIST: ${{ secrets.TARGET_IGNORE_HOSTS_LIST }}
                 SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
                 SLACK_CHANNEL_NAME: ${{ secrets.SLACK_CHANNEL_NAME }}
 
    steps:
      - uses: actions/checkout@v2
        
      - name: Install Dependencies
        run: |
                 go get -u github.com/tomnomnom/gf
                 cp /home/runner/go/bin/gf .
                 git clone https://github.com/1ndianl33t/Gf-Patterns
                 mkdir ~/.gf && cp -r Gf-Patterns/*.json ~/.gf/
                 wget --quiet https://github.com/tomnomnom/qsreplace/releases/download/v0.0.1/qsreplace-linux-386-0.0.1.tgz
                 tar xvf qsreplace-linux-386-0.0.1.tgz
                 go get github.com/tomnomnom/waybackurls
                 cp /home/runner/go/bin/waybackurls .
                 wget --quiet https://github.com/lc/gau/releases/download/v1.1.0/gau_1.1.0_linux_amd64.tar.gz
                 tar xvf gau_1.1.0_linux_amd64.tar.gz
                 
      - name: Input Files
        run: |
                 echo "$TARGET_IGNORE_HOSTS_LIST" > ignore-hosts.txt
                 cat ignore-hosts.txt

      - name: waybackurls
        run: |
                 ./waybackurls "$TARGET_DOMAIN" | tee waybackurls-output.txt 

      - name: gau
        run: |
                 echo "$TARGET_DOMAIN" | ./gau | tee gau-output.txt
                
      - name: Combine Output Files
        run: |
                 cat waybackurls-output.txt gau-output.txt | tee all-urls.txt
                 while read line; do if [ ! -z "$line" ] ; then cat all-urls.txt | grep -v "$line" | tee all-urls.txt; fi; done < ignore-hosts.txt
                 sort -u all-urls.txt -o all-urls.txt
                 zip all-urls.txt.zip all-urls.txt && xz all-urls.txt.zip
                 cat all-urls.txt | grep "=" | egrep -iv ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt|js)" | tee temp-output.txt
                 cat temp-output.txt | ./qsreplace FUZZ | tee -a all-urls-unqiue.txt
                 zip all-urls-unqiue.txt.zip all-urls-unqiue.txt && xz all-urls-unqiue.txt.zip
 
      - name: Patterns
        run: |
                 mkdir patterns-urls
                 cat all-urls.txt | ./gf interestingEXT | tee -a patterns-urls/interestingEXT-params.txt
                 cat all-urls.txt | ./gf jsvar | tee -a patterns-urls/jsvar-params.txt          
                 cat all-urls-unqiue.txt | ./gf interestingparams | tee -a patterns-urls/interestingparams-params.txt
                 cat all-urls-unqiue.txt | ./gf xss | tee -a patterns-urls/xss-params.txt
                 cat all-urls-unqiue.txt | ./gf sqli | tee -a patterns-urls/sqli-params.txt          
                 cat all-urls-unqiue.txt | ./gf lfi | tee -a patterns-urls/lfi-params.txt          
                 cat all-urls-unqiue.txt | ./gf ssrf | tee -a patterns-urls/ssrf-params.txt          
                 cat all-urls-unqiue.txt | ./gf redirect | tee -a patterns-urls/redirect-params.txt          
                 cat all-urls-unqiue.txt | ./gf ssti | tee -a patterns-urls/ssti-params.txt          
                 cat all-urls-unqiue.txt | ./gf rce | tee -a patterns-urls/rce-params.txt          
                 cat all-urls-unqiue.txt | ./gf idor | tee -a patterns-urls/idor-params.txt          
                 cat all-urls-unqiue.txt | ./gf debug_logic | tee -a patterns-urls/debug_logic-params.txt
                 cat all-urls-unqiue.txt | ./gf img-traversal | tee -a patterns-urls/img-traversal-params.txt
                 cat all-urls-unqiue.txt | ./gf interestingsubs | tee -a patterns-urls/interestingsubs-params.txt
                 zip -r patterns-urls.zip patterns-urls && xz patterns-urls.zip       
   
      - name: Send Outputs to Slack Channel
        run: |
                 curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-Collect-All-Urls -F filename="$TARGET_DOMAIN"-all-urls.zip.xz -F file=@all-urls.txt.zip.xz
                 curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-Collect-All-Unique-Urls -F filename="$TARGET_DOMAIN"-all-urls-unqiue.txt.zip.xz -F file=@all-urls-unqiue.txt.zip.xz
                 curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title="$TARGET_DOMAIN"-GF-Patterns-Urls -F filename="$TARGET_DOMAIN"-patterns-urls.txt.zip.xz -F file=@patterns-urls.zip.xz
