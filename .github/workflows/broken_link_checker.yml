  broken-link-checker-light:
    if: always()
    runs-on: ubuntu-latest
    needs: [DNSx, HTTProber, Subdomain-Takeover, Nuclei-Template-Scan, Mass-Nmap-Scan, Nmap-Vulnerability-Scan, URL-Enumeration, XSS-Hunter, Parameter-Discovery, Favicon-Hash-Extraction, Javascript-Scan, Secrets-Finder, CORS-Scanner, S3-Scanner, Aquatone, Gochopchop-Scan, Subdomainizer, Git-Dorker-Domain, Eyewitness, KXSS-Enum, XSS-Hunt, MEG]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: httprober-artifacts   
      - name: Broken Link Checker
        run: |
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git
         bash Domain_Monitoring/scripts/blc.sh subdomains-live.txt light;
      - name: Output & Slack Notification
        if: always()
        run: |
         S_CHANNEL=$(echo $TARGET | sed 's/\./_/g')
         curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title="$TARGET"-BLC-Light -F file=@blc-light-broken.txt.xz;
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$S_WEBHOOK" ;

  broken-link-checker-full:
    if: always()
    runs-on: ubuntu-latest
    needs: [HTTProber, broken-link-checker-light]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: httprober-artifacts   
      - name: Broken Link Checker
        run: |
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git
         bash Domain_Monitoring/scripts/blc.sh subdomains-live.txt full;
      - name: Output & Slack Notification
        if: always()
        run: |
         S_CHANNEL=$(echo $TARGET | sed 's/\./_/g')
         curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title="$TARGET"-BLC-Full -F file=@blc-full-broken.txt.xz
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$S_WEBHOOK" ;
