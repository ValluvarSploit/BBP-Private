name: Solo-Broken Link Checker
on:
  workflow_dispatch:
env:
   TARGET: ${{ secrets.DOMAIN }}
   SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
   HOST: ${{ secrets.NGROK_URL }}
   SLACK_CHANNEL_NAME: ${{ secrets.SLACK_CN_SOLO }} 
   WEBHOOK: ${{ secrets.SLACK_WEBHOOK_SOLO }}
jobs:
  broken-link-checker-light:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         sudo npm install broken-link-checker -g    
         wget $HOST/httpx-out.txt
      - name: Broken Link Checker
        run: |
         for url in $(cat httpx-out.txt) ; do printf **"$url"** | tee -a blh-light.txt; blc -of --filter-level 0 $url | tee -a blh-light.txt; done ;
      - name: Send Output Files Slack Channel
        if: always()
        run: |
         cat blh-light.txt | grep -v "├───OK───" > blh-light-broken.txt
         zip blc-light.zip blh-light.txt blh-light-broken.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=Broken-Link-Checker-Light -F file=@blc-light.zip
      - name: Slack Notification
        if: always()
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Broken Link Checker Light HAS COMPLETED FOR - '$TARGET'"}' "$WEBHOOK"
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
         name: blc-artifacts
         path: |
          httpx-out.txt
         
  broken-link-checker-full:
    needs: broken-link-checker-light
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: blc-artifacts
      - name: Install Dependencies
        run: |
         sudo npm install broken-link-checker -g    
      - name: Broken Link Checker
        run: |
         for url in $(cat httpx-out.txt) ; do printf **"$url"** | tee -a blh-full.txt; blc -rof --filter-level 3 $url | tee -a blh-full.txt; done ;
      - name: Send Output Files Slack Channel
        if: always()
        run: |
         cat blh-full.txt | grep -v "├───OK───" > blh-full-broken.txt
         zip blc-full.zip blh-full.txt blh-full-broken.txt
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$SLACK_CHANNEL_NAME" -F title=Broken-Link-Checker-Full -F file=@blc-full.zip
      - name: Slack Notification
        if: always()
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Broken Link Checker FULL HAS COMPLETED FOR - '$TARGET'"}' "$WEBHOOK"
