name: Subdomain Takeover
on:
  workflow_dispatch:
env:
      TARGET: ${{ secrets.DOMAIN }}
      HOST: ${{ secrets.NGROK_URL }}
      S_WEBHOOK: ${{ secrets.WHOOK_JOB_ALERTS }}
      S_URL: https://slack.com/api/files.upload
jobs:
  Subdomain-Takeover:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
         touch subjack-logs.txt ;
         git clone https://github.com/projectdiscovery/nuclei-templates.git;
         go env -w GOPATH=~/Downloads;
         go get github.com/haccer/subjack
         go get github.com/lukasikic/subzy
         go get github.com/Ice3man543/SubOver
         cp ~/Downloads/bin/subjack .; cp ~/Downloads/bin/subzy .; cp ~/Downloads/bin/SubOver .; cp binaries/providers.json . 
         wget --quiet https://github.com/projectdiscovery/nuclei/releases/download/v2.3.2/nuclei_2.3.2_linux_amd64.tar.gz; tar -xzvf nuclei_2.3.2_linux_amd64.tar.gz
      - name: Subzy
        run: |
         ./subzy --targets=subdomains-live.txt -concurrency 50 | tee subzy.logs ;
         cat subzy.logs | grep -v "NOT VULNERABLE" > subzy.out;
      - name: Subjack
        run: |
         ./subjack -a -ssl -w subdomains-live.txt -t 50 -timeout 30 -o subjack.logs -v -c binaries/subjack_fingerprints.json ;
         cat subjack.logs | grep -v "Not Vulnerable" | tee subjack.out;
      - name: Nuclei
        run: ./nuclei -l subdomains-live.txt -c 100 -stats -t nuclei-templates/takeovers -o nuclie.out ;
      - name: SubOver
        run: ./SubOver -l subdomains-host.txt -o subover.out;
      - name: Combine Output Files
        run: |
         cat subzy.logs subjack.logs >> sto.logs
         if [[ -f subzy.out ]]; then echo "*****Subzy*****" > subdomain-takeovers.out; cat subzy.out >> subdomain-takeovers.out; fi ;
         if [[ -f subjack.out ]]; then echo "*****Subjack*****" >> subdomain-takeovers.out; cat subjack.out >> subdomain-takeovers.out; fi ;
         if [[ -f nuclie.out ]]; then echo "*****Nuceli*****" >> subdomain-takeovers.out; cat nuclie.out >> subdomain-takeovers.out; fi ;
         if [[ -f subover.out ]]; then echo "*****SubOver*****" >> subdomain-takeovers.out; cat subover.out >> subdomain-takeovers.out; fi ;
         zip subdomain-takeover.zip subdomain-takeovers.out sto.logs ; xz subdomain-takeover.zip ;
      - name: Output & Slack Notification
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g')
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$S_WEBHOOK" ;
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title="$TARGET"-Subdomain-Takeover -F file=@subdomain-takeover.zip.xz ;
