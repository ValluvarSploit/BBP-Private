# Being Nice to the Server
name: Recon Methodology Light 
on:
  workflow_dispatch:
env:
      TARGET: ${{ secrets.DOMAIN }}
      HOST: ${{ secrets.NGROK_URL }}
      AWS_CREDS: ${{ secrets.AWS_CREDENTIALS }}
      GIT_ORG: ${{ secrets.TARGET_GITHUB_ORG }}
      GIT_REPO: ${{ secrets.GIT_REPO_URLS }}
      GIT_TOKEN: ${{ secrets.TOKEN }}
      S_TOKEN: ${{ secrets.SLACK_OAUTH_USER_TOKEN }}
      WEBHOOK: ${{ secrets.WHOOK_JOB_ALERTS }}
      S_URL: https://slack.com/api/files.upload
      CUSTOM_GIT_CREDS : ${{ secrets.CUSTOM_GIT_CREDENTIALS }}
      CUSTOM_GIT_CONFIG : ${{ secrets.CUSTOM_GIT_CONFIG }} 
jobs:
  Subdomain-Takeover:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Subdomain Takeover
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"Job *${{ github.job}}* in workflow *${{ github.workflow }}* has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         wget -q $HOST/subdomain-urls-live.txt -O subdomains-live.txt;
         wget -q $HOST/subdomain-hosts-live.txt -O subdomains-host.txt;
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/subdomain_takeover.sh subdomains-live.txt subdomains-host.txt;
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
         name: subdomains-artifacts
         path: |
          subdomains-live.txt
          subdomains-host.txt
      - name: Output & Slack Notification
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g')
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title=Subdomain-Takeover -F file=@subdomain-takeover.zip;
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";

  DNSC:
    if: always()
    runs-on: ubuntu-latest  
    needs: Subdomain-Takeover
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: subdomains-artifacts
      - name: DNSC
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/dnsc.sh -l subdomains-host.txt -o dnsc.csv;
      - name: Send Output to Slack
        if: always()
        run: |
         S_CHANNEL=$(echo $TARGET | sed 's/\./_/g')
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$S_CHANNEL" -F title=DNSC -F file=@dnsc.csv
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";


  Eyewitness:
    if: always()
    runs-on: ubuntu-latest
    needs: [Subdomain-Takeover, DNSC]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: subdomains-artifacts
      - name: Eyewitness
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/eyewitness.sh subdomains-live.txt;
      - name: Job Stauts Slack Notification
        if: always()
        run: |
         S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
         curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title=Eyewitness-Screenshots -F file=@eyewitness_output.zip.xz;
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";

  S3-Scanner:
    runs-on: ubuntu-latest
    needs: [Subdomain-Takeover, Eyewitness]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: subdomains-artifacts
      - name: S3 Scanner
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         mkdir ~/.aws; echo "$AWS_CREDS" > ~/.aws/credentials;
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/s3_scanner.sh subdomains-host.txt;
      - name: Output & Slack Notification
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title=S3-Scan -F file=@s3-scan.txt;
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";

  Whatweb:
    if: always()
    runs-on: ubuntu-latest  
    needs: [Subdomain-Takeover, S3-Scanner]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: subdomains-artifacts
      - name: Whatweb Scan
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/whatweb.sh subdomains-host.txt;
      - name: Output to Slack Notification
        if: always()
        run: |
         S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$S_CHANNEL" -F title=Whatweb-Scan -F file=@whatweb-logs.json;
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";

  CORS-Scanner:
    if: always()
    runs-on: ubuntu-latest  
    needs: [Subdomain-Takeover, Whatweb]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         name: subdomains-artifacts
      - name: CORS Scan
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/cors-scan.sh subdomains-live.txt;
      - name: Send Output to Slack
        if: always()
        run: |
         S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$S_CHANNEL" -F title=CORS-Scan -F file=@cors_scan.txt
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";


  Git-Dorker-Domain:
    if: always()
    runs-on: ubuntu-latest  
    needs: CORS-Scanner
    steps:
      - uses: actions/checkout@v2
      - name: Git-Dorker-Domain
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/gitdorker.sh "$TARGET" "$GIT_TOKEN";   
      - name: Output & Slack Notification
        if: always()
        run: |
          S_CHANNEL=$(echo $TARGET | sed 's/\./_/g')
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title=Gitdorker-DOMAIN -F file=@git-dorker-domain_gh_dorks.csv.xz ;
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";

  Gitleaks:
    if: always()
    runs-on: ubuntu-latest 
    needs: Git-Dorker-Domain
    steps:
      - uses: actions/checkout@v2
      - name: Gitleaks
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`Started`*_  - '$TARGET'"}' "$WEBHOOK";
         echo "$GIT_REPO" > git_repo_url.txt;
         echo "$CUSTOM_GIT_CREDS" > ~/.git-credentials;
         echo "$CUSTOM_GIT_CONFIG" > ~/.gitconfig;
         git clone https://github.com/ValluvarSploit/Domain_Monitoring.git;
         bash Domain_Monitoring/scripts/gitleaks.sh git_repo_url.txt;
      - name: Send Output to Slack
        if: always()
        run: |
         S_CHANNEL=$(echo $TARGET | sed 's/\./_/g');
         curl https://slack.com/api/files.upload -F token="$SLACK_OAUTH_TOKEN" -F channels="$S_CHANNEL" -F title="$GIT_ORG"-Gitleaks -F file=@gitleaks-reports.zip;
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$WEBHOOK";


  Slack-Notification:
    if: always()
    runs-on: ubuntu-latest  
    needs: [Subdomain-Takeover, DNSC, Eyewitness, S3-Scanner, Whatweb, CORS-Scanner, Git-Dorker-Domain, Gitleaks]
    steps:
      - uses: actions/checkout@v2
      - name: Slack 
        run: |
         curl -X POST -H 'Content-type: application/json' --data '{"text":"The workflow ${{ github.workflow }} has _*`Completed`*_  - '$TARGET'"}' "$WEBHOOK";

