      - name: MassDNS
        run: |
         sed "s/$/.$TARGET/" subdomain-wordlists.txt > wordlist-hugh.txt ;
         cat wordlist-hugh.txt | sed 's/\*\.//g' | sort -u > wordlist-hugh2.txt
         grep -vFf subdomains-exclude.txt wordlist-hugh2.txt > wordlist-all.txt ;
         ./binaries/massdns -r resolvers.txt -t A -o S -w massdns.out wordlist-all.txt ;
         cat massdns.out | awk '{print $1}' | sed 's/.$//' | tr A-Z a-z | sed 's/\*\.//g' | sort -u > massdns.host;
         cat massdns.out | awk '{print $3}' | sort -u | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" > massdns.ip
         cat massdns.host >> subdomains-cleaned.txt; sort -u subdomains-cleaned.txt -o subdomains-cleaned.txt;
         cat massdns.ip ips-manual.txt >> ips-live.txt; sort -u ips-live.txt -o ips-live.txt;
         zip massdns-out.zip massdns.out; xz massdns-out.zip;
         mv subdomains-cleaned.txt subdomains-cleaned-2.txt; grep -vFf subdomains-exclude.txt subdomains-cleaned-2.txt > subdomains-cleaned.txt
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
         name: massdns-artifacts
         path: |
          subdomains-cleaned.txt
          ips-live.txt
          subdomains-exclude.txt 
      - name: Output & Slack Notification
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The job ${{ github.job}} in workflow ${{ github.workflow }} has _*`${{ job.status }}`*_  - '$TARGET'"}' "$S_WEBHOOK" ;
          curl "$S_URL" -F token="$S_TOKEN" -F channels="$S_CHANNEL" -F title="$TARGET"-MassDNS -F file=@massdns-out.zip.xz ;
